{"version":3,"sources":["componentes/Header.js","componentes/FormularioTareas.js","componentes/Tarea.js","componentes/ListaTareas.js","App.js","index.js"],"names":["Header","mostrarCompletadas","cambiarMostrarCompletadas","toggleCompletadas","className","onClick","icon","faEyeSlash","faEye","FormularioTareas","tareas","cambiarTareas","useState","inputTarea","cambiarInputTarea","action","onSubmit","e","preventDefault","id","uuidv4","texto","completada","type","placeholder","value","onChange","target","handleInput","faPlusSquare","Tarea","tarea","toggleCompletada","editarTarea","borrarTarea","editandoTarea","cambiarEditandoTarea","nuevaTarea","cambiarNuevaTarea","faCheckSquare","faSquare","faEdit","faTimes","ListaTareas","map","nuevoTexto","filter","length","App","tareasGuardadas","localStorage","getItem","JSON","parse","useEffect","setItem","stringify","configMostrarCompletadas","toString","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.160baa99.chunk.js","sourcesContent":["import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEyeSlash, faEye } from '@fortawesome/free-solid-svg-icons';\n\nconst Header = ({mostrarCompletadas, cambiarMostrarCompletadas}) => {\n    const toggleCompletadas = () => {\n        cambiarMostrarCompletadas(!mostrarCompletadas);\n    }\n    return (\n        <header className=\"header\">\n            <h1 className=\"header__titulo\">Lista de Tareas</h1>\n            {mostrarCompletadas ?\n                <button\n                    className=\"header__boton\"\n                    onClick={() => toggleCompletadas()}\n                >\n                    No mostrar completadas\n                    <FontAwesomeIcon icon={faEyeSlash} className=\"header__icono-boton\" />\n                </button>\n            :\n                <button\n                    className=\"header__boton\"\n                    onClick={() => toggleCompletadas()}\n                >\n                    Mostrar completadas\n                    <FontAwesomeIcon icon={faEye} className=\"header__icono-boton\" />\n                </button>\n            }\n            \n        </header>\n    );\n}\n \nexport default Header;","import React, {useState} from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlusSquare } from '@fortawesome/free-solid-svg-icons';\n\nconst FormularioTareas = ({tareas, cambiarTareas}) => {\n\tconst [inputTarea, cambiarInputTarea] = useState('');\n\n\tconst handleInput = (e) => {\n\t\tcambiarInputTarea(e.target.value);\n\t}\n\n\tconst handleSubmit = (e) => {\n\t\te.preventDefault();\n\n\t\tcambiarTareas(\n\t\t\t[\n                // va a contener las tarea que ya tenias (...)\n                ...tareas,\n                // agregar nueva tareas\n                {\n                    id: uuidv4(),\n\t\t\t\t\ttexto: inputTarea,\n\t\t\t\t\tcompletada: false\n                }\n            ]\n        );\n        cambiarInputTarea('');\n    }\n\n    return (\n        <form action=\"\" className=\"formulario-tareas\" onSubmit={handleSubmit}>\n            <input\n                type=\"text\"\n                className=\"formulario-tareas__input\"\n                placeholder=\"Escribe una Tarea\"\n                value={inputTarea}\n                onChange={(e) => handleInput(e)}\n            />\n            <button\n                type=\"submit\"\n                className=\"formulario-tareas__btn\"\n            >\n                <FontAwesomeIcon\n                    icon={faPlusSquare}\n                    className='formulario-tareas__icono-btn'\n                />\n            </button>\n        </form>\n    );\n}\n \nexport default FormularioTareas;","import React, {useState} from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheckSquare, faSquare, faEdit, faTimes } from '@fortawesome/free-solid-svg-icons';\n\nconst Tarea = ({tarea, toggleCompletada, editarTarea, borrarTarea}) => {\n    const [editandoTarea, cambiarEditandoTarea] = useState(false);\n    const [nuevaTarea, cambiarNuevaTarea] = useState(tarea.texto);\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        editarTarea(tarea.id, nuevaTarea);\n        cambiarEditandoTarea(false);\n    }\n\n    return (\n        <li className=\"lista-tareas__tarea\">\n            <FontAwesomeIcon\n                icon={tarea.completada ? faCheckSquare : faSquare}\n                className=\"lista-tareas__icono lista-tareas__icono-check\"\n                onClick={() => toggleCompletada(tarea.id)}\n            />\n            <div className=\"lista-tareas__texto\">\n                {editandoTarea ?\n                <form action=\"\" className=\"formulario-editar-tarea\" onSubmit={handleSubmit}>\n                    <input\n                        type=\"text\"\n                        className=\"formulario-editar-tarea__input\"\n                        value={nuevaTarea}\n                        onChange={(e) => cambiarNuevaTarea(e.target.value)}\n                    />\n                    <button\n                        type=\"submit\"\n                        className=\"formulario-editar-tarea__btn\"\n                    >\n                        Actualizar\n                    </button>\n                </form>\n                : tarea.texto\n                }\n            </div>\n            <div className=\"lista-tareas__contenedor-botones\">\n                <FontAwesomeIcon\n                    icon={faEdit}\n                    className=\"lista-tareas__icono lista-tareas__icono-accion\"\n                    onClick={() => cambiarEditandoTarea(!editandoTarea)}\n                />\n                <FontAwesomeIcon\n                    icon={faTimes}\n                    className=\"lista-tareas__icono lista-tareas__icono-accion\"\n                    onClick={() => borrarTarea(tarea.id)}\n                />\n            </div>\n        </li>\n    );\n}\n \nexport default Tarea;","import React from 'react';\nimport Tarea from './Tarea';\n\nconst ListaTareas = ({tareas, cambiarTareas, mostrarCompletadas}) => {\n\tconst toggleCompletada = (id) => {\n\t\tcambiarTareas(tareas.map((tarea) => {\n\t\t\tif(tarea.id === id){\n\t\t\t\treturn {...tarea, completada: !tarea.completada}\n\t\t\t}\n\t\t\treturn tarea;\n\t\t}));\n\t}\n\n\tconst editarTarea = (id, nuevoTexto) => {\n\t\tcambiarTareas(tareas.map((tarea) => {\n\t\t\tif(tarea.id === id){\n\t\t\t\treturn {...tarea, texto: nuevoTexto}\n\t\t\t}\n\t\t\treturn tarea;\n\t\t}));\n\t}\n\n    const borrarTarea = (id) => {\n        // cambiar el estado con metodo filter\n        // filter: Si una tarea es verdadera esa tarea no nos devuelve en nuestro arreglo final\n        cambiarTareas(tareas.filter((tarea) => {\n\t\t\tif(tarea.id !== id){\n\t\t\t\treturn tarea;\n\t\t\t}\n\t\t\treturn;\n\t\t}));\n\t}\n    \n\n    return (\n\t\t<ul className=\"lista-tareas\">\n\t\t\t{tareas.length > 0 ? tareas.map((tarea) => {\n\t\t\t\tif(mostrarCompletadas){\n\t\t\t\t\treturn <Tarea \n\t\t\t\t\t\t\t\tkey={tarea.id}\n\t\t\t\t\t\t\t\ttarea={tarea}\n\t\t\t\t\t\t\t\ttoggleCompletada={toggleCompletada}\n\t\t\t\t\t\t\t\teditarTarea={editarTarea}\n\t\t\t\t\t\t\t\tborrarTarea={borrarTarea}\n\t\t\t\t\t\t\t/>\n\t\t\t\t// Si la tarea no esta completada, la devolvemos.\n\t\t\t\t} else if(!tarea.completada){\n\t\t\t\t\treturn <Tarea \n\t\t\t\t\t\t\t\tkey={tarea.id}\n\t\t\t\t\t\t\t\ttarea={tarea}\n\t\t\t\t\t\t\t\ttoggleCompletada={toggleCompletada}\n\t\t\t\t\t\t\t\teditarTarea={editarTarea}\n\t\t\t\t\t\t\t\tborrarTarea={borrarTarea}\n\t\t\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t\t// Si ya esta completada no la devolvemos\n\t\t\t\treturn;\n\t\t\t})\n\t\t\t:<div className=\"lista-tareas__mensaje\">~ No hay tareas agregadas ~</div>\n\t\t\t}\n\t\t</ul>\n\t);\n}\n \nexport default ListaTareas;","import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport Header from './componentes/Header';\nimport FormularioTareas from './componentes/FormularioTareas';\nimport ListaTareas from './componentes/ListaTareas';\n\n\n\nconst App = () => {\n\n    // Obtenemos las tareas guardadas de localstorege\n    const tareasGuardadas =\n        localStorage.getItem('tareas') ?\n        JSON.parse(localStorage.getItem('tareas')) : [];\n\n    // Establecemmos el estado de las tareas, como cambiar las tareas[cambiarTareas] \n    // useState, pones arreglos[] y dentro ponemos objetos\n    const [tareas,  cambiarTareas] = useState(tareasGuardadas);\n\n    // Guardando el estado dentro de localStorege\n    useEffect(() => {\n        localStorage.setItem('tareas', JSON.stringify(tareas));\n    }, [tareas]);\n\n    // Acceder a  localstorege y comprobamos si mostrarCompletadas es null\n    let configMostrarCompletadas = '';\n    if (localStorage.getItem('mostrarCompletadas') === null) {\n        configMostrarCompletadas = true\n    } else {\n        configMostrarCompletadas = localStorage.getItem('mostrarCompletadas') === 'true';\n    }\n\n    // Estado de mostrarCompletadas\n    const [mostrarCompletadas, cambiarMostrarCompletadas] = useState(configMostrarCompletadas);\n\n    useEffect(() => {\n        localStorage.setItem('mostrarCompletadas', mostrarCompletadas.toString());\n    }, [mostrarCompletadas]);\n\n    return (\n        <div className='contenedor' >\n            <Header\n                mostrarCompletadas={mostrarCompletadas}\n                cambiarMostrarCompletadas={cambiarMostrarCompletadas}\n            />\n            <FormularioTareas\n                tareas={tareas}\n                cambiarTareas={cambiarTareas}\n            />\n            <ListaTareas\n                tareas={tareas}\n                cambiarTareas={cambiarTareas}\n                mostrarCompletadas={mostrarCompletadas}\n            />\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}